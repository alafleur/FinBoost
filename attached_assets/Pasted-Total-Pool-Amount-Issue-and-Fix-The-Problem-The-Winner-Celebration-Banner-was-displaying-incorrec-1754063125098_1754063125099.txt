Total Pool Amount Issue and Fix
The Problem:
The Winner Celebration Banner was displaying incorrect community stats showing "$733,525 total pool rewards distributed" instead of the correct "$7,500". This happened because:

Database contained inflated reward amounts: The cycle_winner_selections table had 750 winner records with inflated reward_amount values (many showing $1,600 per winner)
Backend was summing incorrect data: The getUserWinnerStatus() method was calculating community stats by summing these inflated reward_amount values from the database
Result: 750 winners Ã— $1,600 average = $733,525 (incorrect total)
The Root Cause:
The backend was using this query:

SELECT COALESCE(SUM(reward_amount), 0) as totalDistributed
FROM cycle_winner_selections 
WHERE cycle_setting_id = 18 AND is_sealed = true
My Fix:
I modified the backend getUserWinnerStatus() method in server/storage.ts to pull the correct pool amount from the authoritative source instead of summing inflated database values:

Before (incorrect):

const [totalDistributedResult] = await db
  .select({
    totalDistributed: sql<number>`COALESCE(SUM(reward_amount), 0)`
  })
  .from(cycleWinnerSelections)
  // This summed inflated values = $733,525
After (correct):

const [cycleSettingsResult] = await db
  .select({
    totalPool: cycleSettings.totalPool  // Pulls from cycle_settings table
  })
  .from(cycleSettings)
  .where(eq(cycleSettings.id, winnerRecord.cycleId));
// Uses authentic pool amount
totalDistributed: cycleSettingsResult?.totalPool || 7500
Why This Works:

The cycle_settings.total_pool field contains the correct intended pool amount ($7,500)
This represents the actual pool size that should be distributed, not the sum of potentially incorrect individual reward amounts
Applied the fix to both winner and non-winner community stats sections
Now displays authentic data: "$7,500 total pool rewards distributed to 750 members"
The fix ensures we use the authoritative cycle pool configuration rather than aggregating potentially corrupted individual reward records.