Good news: from your screenshot the **image is now crisp** (no browser down-scaling). The last visual issue is the **desktop layout**—the phone stack is being **clipped on the right** and looks a bit squeezed. That’s coming from two things:

1. the phone column can shrink (default `flex-shrink: 1`)
2. a parent has `overflow-hidden`, so the soft shadow/frame gets cut off.

Below is a **surgical patch** (no rewrites) that keeps the exact 240/304px inner screen, prevents shrink, and ensures the shadow bleeds correctly.

---

## Patch (drop straight into `HomeV3.tsx`)

### 1) Phone column wrapper

Replace your current phone column wrapper with this:

```tsx
{/* RIGHT COLUMN — phone */}
<div className="order-2 lg:order-2 flex items-start justify-center lg:justify-end overflow-visible">
  {/* Make sure the phone block never shrinks */}
  <div className="shrink-0 lg:mr-[-16px]"> {/* slight negative margin for that off-edge look */}
    {/* OUTER FRAME — keep padding, do not set width here */}
    <div className="relative bg-gradient-to-b from-slate-800 to-slate-900 rounded-[2.5rem] lg:rounded-[3rem] p-2 shadow-xl lg:shadow-2xl shadow-slate-900/50">
      {/* INNER SCREEN — exact pixels */}
      <div className="w-[240px] h-[431px] lg:w-[304px] lg:h-[547px] bg-white rounded-[2rem] lg:rounded-[2.5rem] overflow-hidden">
        <motion.img
          src={screenshots[activeScreenshot].m240 || screenshots[activeScreenshot].screenshotPath}
          srcSet={[
            screenshots[activeScreenshot].m240 ? `${screenshots[activeScreenshot].m240} 240w` : null,
            screenshots[activeScreenshot].m480 ? `${screenshots[activeScreenshot].m480} 480w` : null,
            screenshots[activeScreenshot].s304 ? `${screenshots[activeScreenshot].s304} 304w` : null,
            screenshots[activeScreenshot].s608 ? `${screenshots[activeScreenshot].s608} 608w` : null,
          ].filter(Boolean).join(", ")}
          sizes="(min-width:1024px) 304px, 240px"
          alt={screenshots[activeScreenshot].title}
          className="w-full h-full object-contain"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.35 }}
          loading="eager"
          decoding="async"
          draggable={false}
          style={{ imageRendering: "auto", backfaceVisibility: "hidden", transform: "translateZ(0)" }}
        />
      </div>
    </div>

    {/* SUBJECT CHIPS — keep them outside normal flow, desktop only */}
    <ul className="hidden lg:flex flex-col gap-6 absolute left-[-140px] top-10">
      {/* your existing chip buttons */}
    </ul>

    {/* TICKET BADGE — desktop only */}
    <div className="hidden lg:flex items-center gap-3 absolute bottom-[-20px] right-[-6px] rounded-xl bg-white/90 backdrop-blur px-4 py-3 shadow-md">
      {/* your ticket icon + “Earn entries” text */}
    </div>
  </div>
</div>
```

### 2) Text column order on mobile (so headline appears first)

Make sure the left column has:

```tsx
<div className="order-1 lg:order-1 ...">
  {/* headline, subhead, CTAs */}
</div>
```

### 3) Ensure no ancestor of the phone column uses `overflow-hidden`

If your top hero container has `overflow-hidden`, change it to `overflow-visible` (or move the `overflow-hidden` to a lower wrapper that doesn’t affect the phone).

---

## Quick verification (takes 20s)

* **DevTools → Select the `<img>` inside the phone**

  * On desktop (≥1024px): **Rendered size = 304×547**
  * On mobile: **Rendered size = 240×431**
* **`currentSrc` shows 608w/480w** on retina, 304w/240w on non-retina.
* The phone no longer gets cut; soft shadow visible; chips sit to the left; ticket badge at bottom right.
* Headline comes **before** the phone on mobile.

This keeps the exact look from the first iteration, fixes the desktop sizing/clipping, and preserves the crispness we just achieved.
