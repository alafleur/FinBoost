Perfect—here’s a clean, copy-paste package you can hand to Replit. It’s **surgical**, touches only the phone mockup, and keeps your current layout/content.

---

# Message to Replit (pass this along)

**Goal:** Fix landing-page screenshot blur without changing any other content or layout.

**Why screenshots looked soft**

* The image was animated with `scale: 1.05 → 1`, which forces resampling and blur.
* The “phone screen” area wasn’t an exact, integer-pixel box, so the browser was doing fractional scaling.
* Multiple `image-rendering` hints were competing.

**Plan (minimal + safe)**

1. Make the phone “screen” a **flex column** with a fixed status bar height so the screenshot area is an exact, integer-pixel box.
2. Replace the `<motion.img>` animation with **fade-only** (no scale).
3. Use **one** rendering hint (`imageRendering: 'auto'`) to avoid conflicts.
4. Optionally (later), add `srcSet` for 2×/3× assets to be razor-crisp on retina.

No other sections or copy change. No new deps.

---

## Patch A — structural fix (drop-in)

In `client/src/pages/HomeV3.tsx`, find the **phone mockup container** (the one that starts with `w-64 h-[480px] lg:w-80 lg:h-[600px]`).
**Replace only the inner contents from the white rounded screen down to the `<motion.img>` with this block:**

```tsx
<div className="relative w-64 h-[480px] lg:w-80 lg:h-[600px] bg-gradient-to-b from-slate-800 to-slate-900 rounded-[2.5rem] lg:rounded-[3rem] p-2 shadow-xl lg:shadow-2xl shadow-slate-900/50">
  {/* Make the phone screen a flex column so the image area is an exact pixel box */}
  <div className="w-full h-full bg-white rounded-[2rem] lg:rounded-[2.5rem] overflow-hidden flex flex-col">
    {/* Status bar (fixed height) */}
    <div className="h-8 lg:h-12 flex items-center justify-between px-4 lg:px-6 text-xs font-medium text-slate-600 flex-shrink-0">
      <span>9:41</span>
      <div className="flex space-x-1">
        <div className="w-3 h-1 lg:w-4 lg:h-2 bg-slate-300 rounded-sm" />
        <div className="w-3 h-1 lg:w-4 lg:h-2 bg-slate-300 rounded-sm" />
        <div className="w-4 h-1 lg:w-6 lg:h-2 bg-green-500 rounded-sm" />
      </div>
    </div>

    {/* Exact screen area */}
    <div className="flex-1 overflow-hidden flex items-start justify-center">
      <motion.img
        src={screenshots[activeScreenshot].screenshotPath}
        alt={screenshots[activeScreenshot].title}
        className="w-full h-full object-contain will-change-transform"
        /* Fade only — no scale (prevents resampling blur) */
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.35 }}
        loading="lazy"
        decoding="async"
        draggable={false}
        style={{
          imageRendering: 'auto',          // single, unambiguous hint for photos/UI
          backfaceVisibility: 'hidden',
          transform: 'translateZ(0)',      // GPU hint to keep edges crisp
        }}
      />
    </div>
  </div>

  {/* home-button bar */}
  <div className="absolute bottom-1 lg:bottom-2 left-1/2 -translate-x-1/2 w-24 lg:w-32 h-1 bg-white/30 rounded-full" />
</div>
```

> This keeps your current frame/sections/copy intact—only the inner mockup logic changes.

---

## Patch B — DPR/retina upgrade (optional, when 2× assets exist)

When you have 2× (and optionally 3×) exports (sizes below), replace just the `<motion.img>` in Patch A with:

```tsx
<motion.img
  src={screenshots[activeScreenshot].screenshotPath1x}
  srcSet={[
    `${screenshots[activeScreenshot].screenshotPath1x} 1x`,
    `${screenshots[activeScreenshot].screenshotPath2x} 2x`,
    // `${screenshots[activeScreenshot].screenshotPath3x} 3x`, // optional
  ].join(', ')}
  sizes="(min-width: 1024px) 320px, 256px"
  alt={screenshots[activeScreenshot].title}
  className="w-full h-full object-contain will-change-transform"
  initial={{ opacity: 0 }}
  animate={{ opacity: 1 }}
  transition={{ duration: 0.35 }}
  loading="lazy"
  decoding="async"
  draggable={false}
  style={{ imageRendering: 'auto', backfaceVisibility: 'hidden', transform: 'translateZ(0)' }}
/>
```

**Asset targets:**

* 1×: **320×600** (matches desktop frame)
* 2×: **640×1200**
* 3× (optional): **960×1800**

---

## Optional toggle — evaluate `crisp-edges` (only if needed)

If, *after* Patch A and DPR, you still see softness on a specific browser, A/B test a single switch (do **not** stack multiple `image-rendering` values):

```tsx
const preferCrispEdges = false; // flip to true only if it looks better

<motion.img
  …
  style={{
    imageRendering: preferCrispEdges ? 'crisp-edges' : 'auto',
    backfaceVisibility: 'hidden',
    transform: 'translateZ(0)',
  }}
/>
```

Note: `crisp-edges` can make UI text jaggy in some engines—keep it only if it’s clearly better for your screenshots.

---

## Optional style variant

If you prefer a tighter, “premium” look (minor crop instead of letterboxing), change `object-contain` → `object-cover`. Do this **after** the 2× assets are wired.

---

## Clean-up / safety notes

* Ensure there’s **no other `image-rendering:` rule** applied by global CSS to these images. One hint only.
* Keep the outer sizes as they are: `w-64 h-[480px]` and `lg:w-80 lg:h-[600px]`.
* No dependency changes; framer-motion stays.

---

## QA checklist

* iPhone (retina Safari/Chrome): crisp text/icons in screenshots; no shimmer on fade.
* MacBook (retina Chrome/Safari/Firefox): no blur on edges during fade.
* Windows Chrome (1× display): still crisp; no jaggies.
* Verify screenshots are not being downscaled by the build (Vite defaults keep big PNGs as files, so you should be fine).

---

If you want me to generate the exact **before/after diff** for your current file (so it’s literally a 1-patch apply), share the few lines around your `<motion.img>` and I’ll return a ready-to-apply unified diff.
